<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:asp="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 开启注解扫描，管理service,dao和Component -->
    <context:component-scan base-package="com.qq.ssm">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!-- 应用外部配置文件 -->
    <context:property-placeholder location="classpath:db.properties"/>
    <!-- 使用外部配置文件，配置连接池
         dbcp：半自动化操作，不能自动连接
         c3p0：自动化操作（自动化的加载配置文件，并且可以自动设置到对象中！）
         druid：hikari：
     -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${jdbc.driver}"/>
        <property name="jdbcUrl" value="${jdbc.url}"/>
        <property name="user" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
    <!-- 把SqlSessionFactory交给IOC管理 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!-- 传入pagehelper的插件 -->
        <!-- 可以绑定mybatis外部配置文件
        <property name="configLocation" value="classpath:mybatis.xml"/>
             配置dao的mapper映射文件位置
        <property name="mapperLocations" value="classpath*:com/dada/**/*Mapper.xml"/>
        -->
        <property name="plugins">
            <array>
                <!-- 传入插件对对象 -->
                <bean class="com.github.pagehelper.PageInterceptor">
                    <property name="properties">
                        <props>
                            <prop key="helperDialect">sqlserver</prop>
                            <!-- 分页合理化参数，使当前页无法小于0，也无法大于总页数 -->
                            <prop key="reasonable">true</prop>
                        </props>
                    </property>
                </bean>
            </array>
        </property>
    </bean>

    <!-- 扫描dao接口，自动创建所有接口的实现类对象，并注入到spring容器中 -->
    <bean id="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.qq.ssm.dao"/>
        <!-- 注入SQLSessionFactory，如果只有一个可以不写这个属性
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        -->
    </bean>
    <!-- 配置Spring的声明式事务管理 -->
    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!-- 启用扫描@Transactional注解 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!-- AOP事物支持
         结合AOP实现事物的注入，配置事物通知
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        给哪些方法配置事物，配置事物的传播特性
        <tx:attributes>
            <tx:method name="*" propagation="REQUIRED"/>
        </tx:attributes>
    </tx:advice>

         配置事物切入
    <asp:config>
        <aop:pointcut id="txPointCut" expression="execution(* com.qq.ssm.dao.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointCut" />
    </asp:config>
     -->


</beans>